{"version":3,"sources":["@wordpress/edit-navigation/src/store/controls.js"],"names":["apiFetch","request","type","getPendingActions","postId","isProcessingPost","getMenuItemToClientIdMapping","getNavigationPostForMenu","menuId","registryName","selectorName","args","resolveMenuItems","query","select","dispatch","actionName","controls","API_FETCH","SELECT","registry","GET_PENDING_ACTIONS","getState","processingQueue","pendingActions","IS_PROCESSING_POST","inProgress","GET_MENU_ITEM_TO_CLIENT_ID_MAPPING","mapping","DISPATCH","RESOLVE_MENU_ITEMS","__experimentalResolveSelect","getMenuItems","stores","store"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { default as triggerApiFetch } from '@wordpress/api-fetch';\nimport { createRegistryControl } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { menuItemsQuery } from './utils';\n\n/**\n * Trigger an API Fetch request.\n *\n * @param {Object} request API Fetch Request Object.\n * @return {Object} control descriptor.\n */\nexport function apiFetch( request ) {\n\treturn {\n\t\ttype: 'API_FETCH',\n\t\trequest,\n\t};\n}\n\n/**\n * Returns a list of pending actions for given post id.\n *\n * @param {number} postId Post ID.\n * @return {Array} List of pending actions.\n */\nexport function getPendingActions( postId ) {\n\treturn {\n\t\ttype: 'GET_PENDING_ACTIONS',\n\t\tpostId,\n\t};\n}\n\n/**\n * Returns boolean indicating whether or not an action processing specified\n * post is currently running.\n *\n * @param {number} postId Post ID.\n * @return {Object} Action.\n */\nexport function isProcessingPost( postId ) {\n\treturn {\n\t\ttype: 'IS_PROCESSING_POST',\n\t\tpostId,\n\t};\n}\n\n/**\n * Selects menuItemId -> clientId mapping (necessary for saving the navigation).\n *\n * @param {number} postId Navigation post ID.\n * @return {Object} Action.\n */\nexport function getMenuItemToClientIdMapping( postId ) {\n\treturn {\n\t\ttype: 'GET_MENU_ITEM_TO_CLIENT_ID_MAPPING',\n\t\tpostId,\n\t};\n}\n\n/**\n * Resolves navigation post for given menuId.\n *\n * @see selectors.js\n * @param {number} menuId Menu ID.\n * @return {Object} Action.\n */\nexport function getNavigationPostForMenu( menuId ) {\n\treturn {\n\t\ttype: 'SELECT',\n\t\tregistryName: 'core/edit-navigation',\n\t\tselectorName: 'getNavigationPostForMenu',\n\t\targs: [ menuId ],\n\t};\n}\n\n/**\n * Resolves menu items for given menu id.\n *\n * @param {number} menuId Menu ID.\n * @return {Object} Action.\n */\nexport function resolveMenuItems( menuId ) {\n\treturn {\n\t\ttype: 'RESOLVE_MENU_ITEMS',\n\t\tquery: menuItemsQuery( menuId ),\n\t};\n}\n\n/**\n * Calls a selector using chosen registry.\n *\n * @param {string} registryName Registry name.\n * @param {string} selectorName Selector name.\n * @param {Array} args          Selector arguments.\n * @return {Object} control descriptor.\n */\nexport function select( registryName, selectorName, ...args ) {\n\treturn {\n\t\ttype: 'SELECT',\n\t\tregistryName,\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Dispatches an action using chosen registry.\n *\n * @param {string} registryName Registry name.\n * @param {string} actionName   Action name.\n * @param {Array} args          Selector arguments.\n * @return {Object} control descriptor.\n */\nexport function dispatch( registryName, actionName, ...args ) {\n\treturn {\n\t\ttype: 'DISPATCH',\n\t\tregistryName,\n\t\tactionName,\n\t\targs,\n\t};\n}\n\nconst controls = {\n\tAPI_FETCH( { request } ) {\n\t\treturn triggerApiFetch( request );\n\t},\n\n\tSELECT: createRegistryControl(\n\t\t( registry ) => ( { registryName, selectorName, args } ) => {\n\t\t\treturn registry.select( registryName )[ selectorName ]( ...args );\n\t\t}\n\t),\n\n\tGET_PENDING_ACTIONS: createRegistryControl(\n\t\t( registry ) => ( { postId } ) => {\n\t\t\treturn (\n\t\t\t\tgetState( registry ).processingQueue[ postId ]\n\t\t\t\t\t?.pendingActions || []\n\t\t\t);\n\t\t}\n\t),\n\n\tIS_PROCESSING_POST: createRegistryControl(\n\t\t( registry ) => ( { postId } ) => {\n\t\t\treturn getState( registry ).processingQueue[ postId ]?.inProgress;\n\t\t}\n\t),\n\n\tGET_MENU_ITEM_TO_CLIENT_ID_MAPPING: createRegistryControl(\n\t\t( registry ) => ( { postId } ) => {\n\t\t\treturn getState( registry ).mapping[ postId ] || {};\n\t\t}\n\t),\n\n\tDISPATCH: createRegistryControl(\n\t\t( registry ) => ( { registryName, actionName, args } ) => {\n\t\t\treturn registry.dispatch( registryName )[ actionName ]( ...args );\n\t\t}\n\t),\n\n\tRESOLVE_MENU_ITEMS: createRegistryControl(\n\t\t( registry ) => ( { query } ) => {\n\t\t\treturn registry\n\t\t\t\t.__experimentalResolveSelect( 'core' )\n\t\t\t\t.getMenuItems( query );\n\t\t}\n\t),\n};\n\nconst getState = ( registry ) =>\n\tregistry.stores[ 'core/edit-navigation' ].store.getState();\n\nexport default controls;\n"]}
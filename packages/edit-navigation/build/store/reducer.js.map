{"version":3,"sources":["@wordpress/edit-navigation/src/store/reducer.js"],"names":["mapping","state","action","type","postId","rest","processingQueue","inProgress","postState","pendingActions","filter","item","includes"],"mappings":";;;;;;;;;;;;;;;;;AAGA;;;;;;AAEA;;;;;;;;;AASO,SAASA,OAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAkC;AAAA,MAChCC,IADgC,GACND,MADM,CAChCC,IADgC;AAAA,MAC1BC,MAD0B,GACNF,MADM,CAC1BE,MAD0B;AAAA,MACfC,IADe,0CACNH,MADM;;AAExC,MAAKC,IAAI,KAAK,oCAAd,EAAqD;AACpD,6BAAYF,KAAZ,oCAAqBG,MAArB,EAA+BC,IAAI,CAACL,OAApC;AACA;;AAED,SAAOC,KAAK,IAAI,EAAhB;AACA;AAED;;;;;;;;;;;;AAUO,SAASK,eAAT,CAA0BL,KAA1B,EAAiCC,MAAjC,EAA0C;AAAA;;AAAA,MACxCC,IADwC,GACdD,MADc,CACxCC,IADwC;AAAA,MAClCC,MADkC,GACdF,MADc,CAClCE,MADkC;AAAA,MACvBC,IADuB,0CACdH,MADc;;AAEhD,UAASC,IAAT;AACC,SAAK,uBAAL;AACC,+BACIF,KADJ,oCAEGG,MAFH,oBAGKH,KAAK,CAAEG,MAAF,CAHV;AAIEG,QAAAA,UAAU,EAAE;AAJd;;AAQD,SAAK,wBAAL;AACC,+BACIN,KADJ,oCAEGG,MAFH,oBAGKH,KAAK,CAAEG,MAAF,CAHV;AAIEG,QAAAA,UAAU,EAAE;AAJd;;AAQD,SAAK,oBAAL;AACC,UAAMC,SAAS,qBAAQP,KAAK,CAAEG,MAAF,CAAb,CAAf;;AACA,UAAK,oBAAoBI,SAAzB,EAAqC;AAAA;;AACpCA,QAAAA,SAAS,CAACC,cAAV,4BAA2BD,SAAS,CAACC,cAArC,0DAA2B,sBAA0BC,MAA1B,CAC1B,UAAEC,IAAF;AAAA,iBAAYA,IAAI,KAAKN,IAAI,CAACH,MAA1B;AAAA,SAD0B,CAA3B;AAGA;;AACD,+BACID,KADJ,oCAEGG,MAFH,EAEaI,SAFb;;AAKD,SAAK,0BAAL;AACC,UAAMC,cAAc,GAAG,kBAAAR,KAAK,CAAEG,MAAF,CAAL,gEAAiBK,cAAjB,KAAmC,EAA1D;;AACA,UAAK,CAAEA,cAAc,CAACG,QAAf,CAAyBP,IAAI,CAACH,MAA9B,CAAP,EAAgD;AAC/C,iCACID,KADJ,oCAEGG,MAFH,oBAGKH,KAAK,CAAEG,MAAF,CAHV;AAIEK,UAAAA,cAAc,6CAAOA,cAAP,IAAuBJ,IAAI,CAACH,MAA5B;AAJhB;AAOA;;AACD;AA1CF;;AA6CA,SAAOD,KAAK,IAAI,EAAhB;AACA;;eAEc,2BAAiB;AAC/BD,EAAAA,OAAO,EAAPA,OAD+B;AAE/BM,EAAAA,eAAe,EAAfA;AAF+B,CAAjB,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal to edit-navigation package.\n *\n * Stores menuItemId -> clientId mapping which is necessary for saving the navigation.\n *\n * @param {Object} state Redux state\n * @param {Object} action Redux action\n * @return {Object} Updated state\n */\nexport function mapping( state, action ) {\n\tconst { type, postId, ...rest } = action;\n\tif ( type === 'SET_MENU_ITEM_TO_CLIENT_ID_MAPPING' ) {\n\t\treturn { ...state, [ postId ]: rest.mapping };\n\t}\n\n\treturn state || {};\n}\n\n/**\n * Internal to edit-navigation package.\n *\n * Enables serializeProcessing action wrapper by storing the underlying execution\n * state and any pending actions.\n *\n * @param {Object} state Redux state\n * @param {Object} action Redux action\n * @return {Object} Updated state\n */\nexport function processingQueue( state, action ) {\n\tconst { type, postId, ...rest } = action;\n\tswitch ( type ) {\n\t\tcase 'START_PROCESSING_POST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ postId ]: {\n\t\t\t\t\t...state[ postId ],\n\t\t\t\t\tinProgress: true,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'FINISH_PROCESSING_POST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ postId ]: {\n\t\t\t\t\t...state[ postId ],\n\t\t\t\t\tinProgress: false,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase 'POP_PENDING_ACTION':\n\t\t\tconst postState = { ...state[ postId ] };\n\t\t\tif ( 'pendingActions' in postState ) {\n\t\t\t\tpostState.pendingActions = postState.pendingActions?.filter(\n\t\t\t\t\t( item ) => item !== rest.action\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ postId ]: postState,\n\t\t\t};\n\n\t\tcase 'ENQUEUE_AFTER_PROCESSING':\n\t\t\tconst pendingActions = state[ postId ]?.pendingActions || [];\n\t\t\tif ( ! pendingActions.includes( rest.action ) ) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ postId ]: {\n\t\t\t\t\t\t...state[ postId ],\n\t\t\t\t\t\tpendingActions: [ ...pendingActions, rest.action ],\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn state || {};\n}\n\nexport default combineReducers( {\n\tmapping,\n\tprocessingQueue,\n} );\n"]}
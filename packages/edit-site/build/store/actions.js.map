{"version":3,"sources":["@wordpress/edit-site/src/store/actions.js"],"names":["addTemplate","removeTemplate","setPage","toggleFeature","feature","type","__experimentalSetPreviewDeviceType","deviceType","setTemplate","templateId","template","newTemplate","id","path","method","dispatch","setTemplatePart","templatePartId","page"],"mappings":";;;;;;;;;;;;;;;;;AAGA;;AAKA;;qDAmDiBA,W;sDAqBAC,c;sDAqCAC,O;;AA3GjB;;;;;;;AAOO,SAASC,aAAT,CAAwBC,OAAxB,EAAkC;AACxC,SAAO;AACNC,IAAAA,IAAI,EAAE,gBADA;AAEND,IAAAA,OAAO,EAAPA;AAFM,GAAP;AAIA;AAED;;;;;;;;;AAOO,SAASE,kCAAT,CAA6CC,UAA7C,EAA0D;AAChE,SAAO;AACNF,IAAAA,IAAI,EAAE,yBADA;AAENE,IAAAA,UAAU,EAAVA;AAFM,GAAP;AAIA;AAED;;;;;;;;;AAOO,SAASC,WAAT,CAAsBC,UAAtB,EAAmC;AACzC,SAAO;AACNJ,IAAAA,IAAI,EAAE,cADA;AAENI,IAAAA,UAAU,EAAVA;AAFM,GAAP;AAIA;AAED;;;;;;;;;AAOO,SAAUT,WAAV,CAAuBU,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACc,iBAAM,4BACzB,MADyB,EAEzB,kBAFyB,EAGzB,UAHyB,EAIzB,aAJyB,EAKzBA,QALyB,CAAN;;AADd;AACAC,UAAAA,WADA;AAAA,2CAQC;AACNN,YAAAA,IAAI,EAAE,cADA;AAENI,YAAAA,UAAU,EAAEE,WAAW,CAACC;AAFlB,WARD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcP;;;;;;;;;AAOO,SAAUX,cAAV,CAA0BQ,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACN,iBAAM,4BAAU;AACfI,YAAAA,IAAI,6BAAuBJ,UAAvB,CADW;AAEfK,YAAAA,MAAM,EAAE;AAFO,WAAV,CAAN;;AADM;AAAA,yBAKCC,sBALD;AAAA;AAQL,iBAAM,0BAAQ,gBAAR,EAA0B,SAA1B,CAAN;;AARK;AAAA;AAAA,8DAML,gBANK,EAOL,SAPK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP;;;;;;;;;AAOO,SAASC,eAAT,CAA0BC,cAA1B,EAA2C;AACjD,SAAO;AACNZ,IAAAA,IAAI,EAAE,mBADA;AAENY,IAAAA,cAAc,EAAdA;AAFM,GAAP;AAIA;AAED;;;;;;;;;;;;;AAWO,SAAUf,OAAV,CAAmBgB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACa,iBAAM,4BAAcA,IAAI,CAACL,IAAnB,CAAN;;AADb;AACAJ,UAAAA,UADA;AAAA,4CAEC;AACNJ,YAAAA,IAAI,EAAE,UADA;AAENa,YAAAA,IAAI,EAAJA,IAFM;AAGNT,YAAAA,UAAU,EAAVA;AAHM,WAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select, dispatch, apiFetch } from '@wordpress/data-controls';\n\n/**\n * Internal dependencies\n */\nimport { findTemplate } from './controls';\n\n/**\n * Returns an action object used to toggle a feature flag.\n *\n * @param {string} feature Feature name.\n *\n * @return {Object} Action object.\n */\nexport function toggleFeature( feature ) {\n\treturn {\n\t\ttype: 'TOGGLE_FEATURE',\n\t\tfeature,\n\t};\n}\n\n/**\n * Returns an action object used to toggle the width of the editing canvas.\n *\n * @param {string} deviceType\n *\n * @return {Object} Action object.\n */\nexport function __experimentalSetPreviewDeviceType( deviceType ) {\n\treturn {\n\t\ttype: 'SET_PREVIEW_DEVICE_TYPE',\n\t\tdeviceType,\n\t};\n}\n\n/**\n * Returns an action object used to set a template.\n *\n * @param {number} templateId The template ID.\n *\n * @return {Object} Action object.\n */\nexport function setTemplate( templateId ) {\n\treturn {\n\t\ttype: 'SET_TEMPLATE',\n\t\ttemplateId,\n\t};\n}\n\n/**\n * Adds a new template, and sets it as the current template.\n *\n * @param {Object} template The template.\n *\n * @return {Object} Action object used to set the current template.\n */\nexport function* addTemplate( template ) {\n\tconst newTemplate = yield dispatch(\n\t\t'core',\n\t\t'saveEntityRecord',\n\t\t'postType',\n\t\t'wp_template',\n\t\ttemplate\n\t);\n\treturn {\n\t\ttype: 'SET_TEMPLATE',\n\t\ttemplateId: newTemplate.id,\n\t};\n}\n\n/**\n * Removes a template, and updates the current page and template.\n *\n * @param {number} templateId The template ID.\n *\n * @return {Object} Action object used to set the current page and template.\n */\nexport function* removeTemplate( templateId ) {\n\tyield apiFetch( {\n\t\tpath: `/wp/v2/templates/${ templateId }`,\n\t\tmethod: 'DELETE',\n\t} );\n\treturn dispatch(\n\t\t'core/edit-site',\n\t\t'setPage',\n\t\tyield select( 'core/edit-site', 'getPage' )\n\t);\n}\n\n/**\n * Returns an action object used to set a template part.\n *\n * @param {number} templatePartId The template part ID.\n *\n * @return {Object} Action object.\n */\nexport function setTemplatePart( templatePartId ) {\n\treturn {\n\t\ttype: 'SET_TEMPLATE_PART',\n\t\ttemplatePartId,\n\t};\n}\n\n/**\n * Resolves the template for a page and sets them.\n *\n * @param {Object} page         The page object.\n * @param {string} page.type    The page type.\n * @param {string} page.slug    The page slug.\n * @param {string} page.path    The page path.\n * @param {Object} page.context The page context.\n *\n * @return {Object} Action object.\n */\nexport function* setPage( page ) {\n\tconst templateId = yield findTemplate( page.path );\n\treturn {\n\t\ttype: 'SET_PAGE',\n\t\tpage,\n\t\ttemplateId,\n\t};\n}\n"]}
{"version":3,"sources":["@wordpress/interface/src/store/reducer.js"],"names":["singleEnableItems","state","type","itemType","scope","item","multipleEnableItems","isEnable","currentTypeState","currentScopeState","enableItems"],"mappings":";;;;;;;;;;;;;AAGA;;AAKA;;;;;;AAEA;;;;;;;;;;;;AAYO,SAASA,iBAAT,GAGL;AAAA,MAFDC,KAEC,uEAFO,EAEP;;AAAA;AAAA,MADCC,IACD,QADCA,IACD;AAAA,MADOC,QACP,QADOA,QACP;AAAA,MADiBC,KACjB,QADiBA,KACjB;AAAA,MADwBC,IACxB,QADwBA,IACxB;;AACD,MAAKH,IAAI,KAAK,wBAAT,IAAqC,CAAEC,QAAvC,IAAmD,CAAEC,KAA1D,EAAkE;AACjE,WAAOH,KAAP;AACA;;AAED,2BACIA,KADJ,oCAEGE,QAFH,oBAGKF,KAAK,CAAEE,QAAF,CAHV,oCAIIC,KAJJ,EAIaC,IAAI,IAAI,IAJrB;AAOA;AAED;;;;;;;;;;;;;;;AAaO,SAASC,mBAAT,GAGL;AAAA,MAFDL,KAEC,uEAFO,EAEP;;AAAA;AAAA,MADCC,IACD,SADCA,IACD;AAAA,MADOC,QACP,SADOA,QACP;AAAA,MADiBC,KACjB,SADiBA,KACjB;AAAA,MADwBC,IACxB,SADwBA,IACxB;AAAA,MAD8BE,QAC9B,SAD8BA,QAC9B;;AACD,MACCL,IAAI,KAAK,0BAAT,IACA,CAAEC,QADF,IAEA,CAAEC,KAFF,IAGA,CAAEC,IAHF,IAIA,iBAAKJ,KAAL,EAAY,CAAEE,QAAF,EAAYC,KAAZ,EAAmBC,IAAnB,CAAZ,MAA4CE,QAL7C,EAME;AACD,WAAON,KAAP;AACA;;AACD,MAAMO,gBAAgB,GAAGP,KAAK,CAAEE,QAAF,CAAL,IAAqB,EAA9C;AACA,MAAMM,iBAAiB,GAAGD,gBAAgB,CAAEJ,KAAF,CAAhB,IAA6B,EAAvD;AAEA,2BACIH,KADJ,oCAEGE,QAFH,oBAGKK,gBAHL,oCAIIJ,KAJJ,oBAKMK,iBALN,oCAMKJ,IANL,EAMaE,QAAQ,IAAI,KANzB;AAUA;;AAED,IAAMG,WAAW,GAAG,2BAAiB;AACpCV,EAAAA,iBAAiB,EAAjBA,iBADoC;AAEpCM,EAAAA,mBAAmB,EAAnBA;AAFoC,CAAjB,CAApB;;eAKe,2BAAiB;AAC/BI,EAAAA,WAAW,EAAXA;AAD+B,CAAjB,C","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer to keep tract of the active area per scope.\n *\n * @param {boolean} state           Previous state.\n * @param {Object}  action          Action object.\n * @param {string}  action.type     Action type.\n * @param {string}  action.itemType Type of item.\n * @param {string}  action.scope    Item scope.\n * @param {string}  action.item     Item name.\n *\n * @return {Object} Updated state.\n */\nexport function singleEnableItems(\n\tstate = {},\n\t{ type, itemType, scope, item }\n) {\n\tif ( type !== 'SET_SINGLE_ENABLE_ITEM' || ! itemType || ! scope ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\t...state,\n\t\t[ itemType ]: {\n\t\t\t...state[ itemType ],\n\t\t\t[ scope ]: item || null,\n\t\t},\n\t};\n}\n\n/**\n * Reducer keeping track of the \"pinned\" items per scope.\n *\n * @param {boolean} state           Previous state.\n * @param {Object}  action          Action object.\n * @param {string}  action.type     Action type.\n * @param {string}  action.itemType Type of item.\n * @param {string}  action.scope    Item scope.\n * @param {string}  action.item     Item name.\n * @param {boolean} action.isEnable Whether the item is pinned.\n *\n * @return {Object} Updated state.\n */\nexport function multipleEnableItems(\n\tstate = {},\n\t{ type, itemType, scope, item, isEnable }\n) {\n\tif (\n\t\ttype !== 'SET_MULTIPLE_ENABLE_ITEM' ||\n\t\t! itemType ||\n\t\t! scope ||\n\t\t! item ||\n\t\tget( state, [ itemType, scope, item ] ) === isEnable\n\t) {\n\t\treturn state;\n\t}\n\tconst currentTypeState = state[ itemType ] || {};\n\tconst currentScopeState = currentTypeState[ scope ] || {};\n\n\treturn {\n\t\t...state,\n\t\t[ itemType ]: {\n\t\t\t...currentTypeState,\n\t\t\t[ scope ]: {\n\t\t\t\t...currentScopeState,\n\t\t\t\t[ item ]: isEnable || false,\n\t\t\t},\n\t\t},\n\t};\n}\n\nconst enableItems = combineReducers( {\n\tsingleEnableItems,\n\tmultipleEnableItems,\n} );\n\nexport default combineReducers( {\n\tenableItems,\n} );\n"]}
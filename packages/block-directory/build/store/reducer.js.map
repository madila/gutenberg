{"version":3,"sources":["@wordpress/block-directory/src/store/reducer.js"],"names":["downloadableBlocks","state","action","type","filterValue","isRequesting","results","blockManagement","installedBlockTypes","isInstalling","item","filter","blockType","name","blockId","errorNotices","message","isFatal"],"mappings":";;;;;;;;;;;;;AAIA;;AAKA;;;;;;AAEA;;;;;;;;AAQO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,GAA0B;AAAA,MAAxBC,KAAwB,uEAAhB,EAAgB;AAAA,MAAZC,MAAY;;AAC3D,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,2BAAL;AACC,+BACIF,KADJ,oCAEGC,MAAM,CAACE,WAFV,EAEyB;AACvBC,QAAAA,YAAY,EAAE;AADS,OAFzB;;AAMD,SAAK,6BAAL;AACC,+BACIJ,KADJ,oCAEGC,MAAM,CAACE,WAFV,EAEyB;AACvBE,QAAAA,OAAO,EAAEJ,MAAM,CAACF,kBADO;AAEvBK,QAAAA,YAAY,EAAE;AAFS,OAFzB;AATF;;AAiBA,SAAOJ,KAAP;AACA,CAnBM;AAqBP;;;;;;;;;;;;AAQO,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,GAM1B;AAAA,MALJN,KAKI,uEALI;AACPO,IAAAA,mBAAmB,EAAE,EADd;AAEPC,IAAAA,YAAY,EAAE;AAFP,GAKJ;AAAA,MADJP,MACI;;AACJ,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,0BAAL;AACC,+BACIF,KADJ;AAECO,QAAAA,mBAAmB,6CACfP,KAAK,CAACO,mBADS,IAElBN,MAAM,CAACQ,IAFW;AAFpB;;AAOD,SAAK,6BAAL;AACC,+BACIT,KADJ;AAECO,QAAAA,mBAAmB,EAAEP,KAAK,CAACO,mBAAN,CAA0BG,MAA1B,CACpB,UAAEC,SAAF;AAAA,iBAAiBA,SAAS,CAACC,IAAV,KAAmBX,MAAM,CAACQ,IAAP,CAAYG,IAAhD;AAAA,SADoB;AAFtB;;AAMD,SAAK,sBAAL;AACC,+BACIZ,KADJ;AAECQ,QAAAA,YAAY,oBACRR,KAAK,CAACQ,YADE,oCAETP,MAAM,CAACY,OAFE,EAESZ,MAAM,CAACO,YAFhB;AAFb;AAjBF;;AAyBA,SAAOR,KAAP;AACA,CAjCM;AAmCP;;;;;;;;;;;;AAQO,IAAMc,YAAY,GAAG,SAAfA,YAAe,GAA0B;AAAA,MAAxBd,KAAwB,uEAAhB,EAAgB;AAAA,MAAZC,MAAY;;AACrD,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,kBAAL;AACC,+BACIF,KADJ,oCAEGC,MAAM,CAACY,OAFV,EAEqB;AACnBE,QAAAA,OAAO,EAAEd,MAAM,CAACc,OADG;AAEnBC,QAAAA,OAAO,EAAEf,MAAM,CAACe;AAFG,OAFrB;;AAOD,SAAK,oBAAL;AACC,aAAO,kBAAMhB,KAAN,EAAaC,MAAM,CAACY,OAApB,CAAP;AAVF;;AAYA,SAAOb,KAAP;AACA,CAdM;;;;eAgBQ,2BAAiB;AAC/BD,EAAAA,kBAAkB,EAAlBA,kBAD+B;AAE/BO,EAAAA,eAAe,EAAfA,eAF+B;AAG/BQ,EAAAA,YAAY,EAAZA;AAH+B,CAAjB,C","sourcesContent":["/**\n * External dependencies\n */\n\nimport { omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer returning an array of downloadable blocks.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const downloadableBlocks = ( state = {}, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'FETCH_DOWNLOADABLE_BLOCKS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.filterValue ]: {\n\t\t\t\t\tisRequesting: true,\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'RECEIVE_DOWNLOADABLE_BLOCKS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.filterValue ]: {\n\t\t\t\t\tresults: action.downloadableBlocks,\n\t\t\t\t\tisRequesting: false,\n\t\t\t\t},\n\t\t\t};\n\t}\n\treturn state;\n};\n\n/**\n * Reducer managing the installation and deletion of blocks.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const blockManagement = (\n\tstate = {\n\t\tinstalledBlockTypes: [],\n\t\tisInstalling: {},\n\t},\n\taction\n) => {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_INSTALLED_BLOCK_TYPE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinstalledBlockTypes: [\n\t\t\t\t\t...state.installedBlockTypes,\n\t\t\t\t\taction.item,\n\t\t\t\t],\n\t\t\t};\n\t\tcase 'REMOVE_INSTALLED_BLOCK_TYPE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinstalledBlockTypes: state.installedBlockTypes.filter(\n\t\t\t\t\t( blockType ) => blockType.name !== action.item.name\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'SET_INSTALLING_BLOCK':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisInstalling: {\n\t\t\t\t\t...state.isInstalling,\n\t\t\t\t\t[ action.blockId ]: action.isInstalling,\n\t\t\t\t},\n\t\t\t};\n\t}\n\treturn state;\n};\n\n/**\n * Reducer returning an object of error notices.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const errorNotices = ( state = {}, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'SET_ERROR_NOTICE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.blockId ]: {\n\t\t\t\t\tmessage: action.message,\n\t\t\t\t\tisFatal: action.isFatal,\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'CLEAR_ERROR_NOTICE':\n\t\t\treturn omit( state, action.blockId );\n\t}\n\treturn state;\n};\n\nexport default combineReducers( {\n\tdownloadableBlocks,\n\tblockManagement,\n\terrorNotices,\n} );\n"]}
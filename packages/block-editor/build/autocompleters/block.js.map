{"version":3,"sources":["@wordpress/block-editor/src/autocompleters/block.js"],"names":["createBlocksFromInnerBlocksTemplate","innerBlocksTemplate","name","attributes","innerBlocks","createBlockCompleter","className","triggerPrefix","useItems","filterValue","select","getSelectedBlockClientId","getBlockName","getBlockInsertionPoint","selectedBlockClientId","selectedBlockName","rootClientId","noop","items","categories","collections","filteredItems","filter","item","options","map","blockItem","title","icon","isDisabled","key","id","value","label","allowContext","before","after","test","getOptionCompletion","inserterItem","initialAttributes","action"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop, map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { createBlock } from '@wordpress/blocks';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { searchBlockItems } from '../components/inserter/search-items';\nimport useBlockTypesState from '../components/inserter/hooks/use-block-types-state';\nimport { includeVariationsInInserterItems } from '../components/inserter/utils';\nimport BlockIcon from '../components/block-icon';\n\nconst createBlocksFromInnerBlocksTemplate = ( innerBlocksTemplate ) => {\n\treturn map(\n\t\tinnerBlocksTemplate,\n\t\t( [ name, attributes, innerBlocks = [] ] ) =>\n\t\t\tcreateBlock(\n\t\t\t\tname,\n\t\t\t\tattributes,\n\t\t\t\tcreateBlocksFromInnerBlocksTemplate( innerBlocks )\n\t\t\t)\n\t);\n};\n\n/** @typedef {import('@wordpress/block-editor').WPEditorInserterItem} WPEditorInserterItem */\n\n/** @typedef {import('@wordpress/components').WPCompleter} WPCompleter */\n\n/**\n * Creates a blocks repeater for replacing the current block with a selected block type.\n *\n * @param {Object} props                                   Component props.\n * @param {string} [props.getBlockInsertionParentClientId] Client ID of the parent.\n * @param {string} [props.getInserterItems]                Inserter items for parent.\n * @param {string} [props.getSelectedBlockName]            Name of selected block or null.\n *\n * @return {WPCompleter} A blocks completer.\n */\nfunction createBlockCompleter() {\n\treturn {\n\t\tname: 'blocks',\n\t\tclassName: 'block-editor-autocompleters__block',\n\t\ttriggerPrefix: '/',\n\n\t\tuseItems( filterValue ) {\n\t\t\tconst { rootClientId, selectedBlockName } = useSelect(\n\t\t\t\t( select ) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tgetSelectedBlockClientId,\n\t\t\t\t\t\tgetBlockName,\n\t\t\t\t\t\tgetBlockInsertionPoint,\n\t\t\t\t\t} = select( 'core/block-editor' );\n\t\t\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\t\t\t\treturn {\n\t\t\t\t\t\tselectedBlockName: selectedBlockClientId\n\t\t\t\t\t\t\t? getBlockName( selectedBlockClientId )\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\trootClientId: getBlockInsertionPoint().rootClientId,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t[]\n\t\t\t);\n\t\t\tconst [ items, categories, collections ] = useBlockTypesState(\n\t\t\t\trootClientId,\n\t\t\t\tnoop\n\t\t\t);\n\n\t\t\tconst filteredItems = useMemo( () => {\n\t\t\t\treturn searchBlockItems(\n\t\t\t\t\titems,\n\t\t\t\t\tcategories,\n\t\t\t\t\tcollections,\n\t\t\t\t\tfilterValue\n\t\t\t\t).filter( ( item ) => item.name !== selectedBlockName );\n\t\t\t}, [\n\t\t\t\tfilterValue,\n\t\t\t\tselectedBlockName,\n\t\t\t\titems,\n\t\t\t\tcategories,\n\t\t\t\tcollections,\n\t\t\t] );\n\n\t\t\tconst options = useMemo(\n\t\t\t\t() =>\n\t\t\t\t\tincludeVariationsInInserterItems( filteredItems ).map(\n\t\t\t\t\t\t( blockItem ) => {\n\t\t\t\t\t\t\tconst { title, icon, isDisabled } = blockItem;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tkey: `block-${ blockItem.id }`,\n\t\t\t\t\t\t\t\tvalue: blockItem,\n\t\t\t\t\t\t\t\tlabel: (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<BlockIcon\n\t\t\t\t\t\t\t\t\t\t\tkey=\"icon\"\n\t\t\t\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\t\t\t\tshowColors\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tisDisabled,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t),\n\t\t\t\t[ filteredItems ]\n\t\t\t);\n\n\t\t\treturn [ options ];\n\t\t},\n\t\tallowContext( before, after ) {\n\t\t\treturn ! ( /\\S/.test( before ) || /\\S/.test( after ) );\n\t\t},\n\t\tgetOptionCompletion( inserterItem ) {\n\t\t\tconst { name, initialAttributes, innerBlocks } = inserterItem;\n\t\t\treturn {\n\t\t\t\taction: 'replace',\n\t\t\t\tvalue: createBlock(\n\t\t\t\t\tname,\n\t\t\t\t\tinitialAttributes,\n\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate( innerBlocks )\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t};\n}\n\n/**\n * Creates a blocks repeater for replacing the current block with a selected block type.\n *\n * @return {WPCompleter} A blocks completer.\n */\nexport default createBlockCompleter();\n"]}
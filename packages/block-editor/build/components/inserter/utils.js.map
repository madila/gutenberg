{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/utils.js"],"names":["includeVariationsInInserterItems","items","reduce","result","item","variations","hasDefaultVariation","some","isDefault","push","length","concat","map","variation","id","name","icon","title","description","example","hasOwnProperty","initialAttributes","attributes","innerBlocks"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;AAMO,SAASA,gCAAT,CAA2CC,KAA3C,EAAmD;AACzD,SAAOA,KAAK,CAACC,MAAN,CAAc,UAAEC,MAAF,EAAUC,IAAV,EAAoB;AAAA,2BACZA,IADY,CAChCC,UADgC;AAAA,QAChCA,UADgC,iCACnB,EADmB;AAExC,QAAMC,mBAAmB,GAAGD,UAAU,CAACE,IAAX,CAC3B;AAAA,UAAIC,SAAJ,QAAIA,SAAJ;AAAA,aAAqBA,SAArB;AAAA,KAD2B,CAA5B,CAFwC,CAMxC;AACA;;AACA,QAAK,CAAEF,mBAAP,EAA6B;AAC5BH,MAAAA,MAAM,CAACM,IAAP,CAAaL,IAAb;AACA;;AAED,QAAKC,UAAU,CAACK,MAAhB,EAAyB;AACxBP,MAAAA,MAAM,GAAGA,MAAM,CAACQ,MAAP,CACRN,UAAU,CAACO,GAAX,CAAgB,UAAEC,SAAF,EAAiB;AAChC,iCACIT,IADJ;AAECU,UAAAA,EAAE,YAAMV,IAAI,CAACU,EAAX,cAAmBD,SAAS,CAACE,IAA7B,CAFH;AAGCC,UAAAA,IAAI,EAAEH,SAAS,CAACG,IAAV,IAAkBZ,IAAI,CAACY,IAH9B;AAICC,UAAAA,KAAK,EAAEJ,SAAS,CAACI,KAAV,IAAmBb,IAAI,CAACa,KAJhC;AAKCC,UAAAA,WAAW,EAAEL,SAAS,CAACK,WAAV,IAAyBd,IAAI,CAACc,WAL5C;AAMC;AACAC,UAAAA,OAAO,EAAEN,SAAS,CAACO,cAAV,CAA0B,SAA1B,IACNP,SAAS,CAACM,OADJ,GAENf,IAAI,CAACe,OATT;AAUCE,UAAAA,iBAAiB,oBACbjB,IAAI,CAACiB,iBADQ,MAEbR,SAAS,CAACS,UAFG,CAVlB;AAcCC,UAAAA,WAAW,EAAEV,SAAS,CAACU;AAdxB;AAgBA,OAjBD,CADQ,CAAT;AAoBA;;AAED,WAAOpB,MAAP;AACA,GApCM,EAoCJ,EApCI,CAAP;AAqCA","sourcesContent":["/**\n * Normalizes an inserter block types list and includes variations as separate items.\n *\n * @param {Array} items Denormalized inserter items\n * @return {Array} Normalized inserter items.\n */\nexport function includeVariationsInInserterItems( items ) {\n\treturn items.reduce( ( result, item ) => {\n\t\tconst { variations = [] } = item;\n\t\tconst hasDefaultVariation = variations.some(\n\t\t\t( { isDefault } ) => isDefault\n\t\t);\n\n\t\t// If there is no default inserter variation provided,\n\t\t// then default block type is displayed.\n\t\tif ( ! hasDefaultVariation ) {\n\t\t\tresult.push( item );\n\t\t}\n\n\t\tif ( variations.length ) {\n\t\t\tresult = result.concat(\n\t\t\t\tvariations.map( ( variation ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tid: `${ item.id }-${ variation.name }`,\n\t\t\t\t\t\ticon: variation.icon || item.icon,\n\t\t\t\t\t\ttitle: variation.title || item.title,\n\t\t\t\t\t\tdescription: variation.description || item.description,\n\t\t\t\t\t\t// If `example` is explicitly undefined for the variation, the preview will not be shown.\n\t\t\t\t\t\texample: variation.hasOwnProperty( 'example' )\n\t\t\t\t\t\t\t? variation.example\n\t\t\t\t\t\t\t: item.example,\n\t\t\t\t\t\tinitialAttributes: {\n\t\t\t\t\t\t\t...item.initialAttributes,\n\t\t\t\t\t\t\t...variation.attributes,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinnerBlocks: variation.innerBlocks,\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}, [] );\n}\n"]}
{"version":3,"sources":["@wordpress/edit-navigation/src/store/actions.js"],"names":["batchSave","createMissingMenuItems","serializeProcessing","post","menuId","meta","type","postId","id","mapping","clientIdToMenuId","stack","blocks","length","block","pop","clientId","path","method","data","title","url","menu_order","menuItem","menuItems","push","innerBlocks","saveNavigationPost","mapMenuItemsByClientId","menuItemsByClientId","response","success","Error","clientIdsByMenuId","result","navigationBlock","nonce","stylesheet","body","FormData","append","computeCustomizedAttribute","blocksList","blocksTreeToFlatList","dataList","map","parentId","position","blockToRequestItem","computeKey","item","dataObject","key","JSON","stringify","flatMap","index","concat","getMenuItemForBlock","attributes","name","label","original_title","content","classes","join","xfn","nav_menu_term_id","menu_item_parent","status","_invalid","callback","isProcessing","action","pendingActions","serializedCallback"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { invert, keyBy, omit } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { serialize } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetNavigationPostForMenu,\n\tgetPendingActions,\n\tisProcessingPost,\n\tgetMenuItemToClientIdMapping,\n\tresolveMenuItems,\n\tdispatch,\n\tapiFetch,\n} from './controls';\nimport { menuItemsQuery } from './utils';\n\n/**\n * Creates a menu item for every block that doesn't have an associated menuItem.\n * Requests POST /wp/v2/menu-items once for every menu item created.\n *\n * @param {Object} post A navigation post to process\n * @return {Function} An action creator\n */\nexport const createMissingMenuItems = serializeProcessing( function* ( post ) {\n\tconst menuId = post.meta.menuId;\n\n\tconst mapping = yield {\n\t\ttype: 'GET_MENU_ITEM_TO_CLIENT_ID_MAPPING',\n\t\tpostId: post.id,\n\t};\n\tconst clientIdToMenuId = invert( mapping );\n\n\tconst stack = [ post.blocks[ 0 ] ];\n\twhile ( stack.length ) {\n\t\tconst block = stack.pop();\n\t\tif ( ! ( block.clientId in clientIdToMenuId ) ) {\n\t\t\tconst menuItem = yield apiFetch( {\n\t\t\t\tpath: `/__experimental/menu-items`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: {\n\t\t\t\t\ttitle: 'Placeholder',\n\t\t\t\t\turl: 'Placeholder',\n\t\t\t\t\tmenu_order: 0,\n\t\t\t\t},\n\t\t\t} );\n\n\t\t\tmapping[ menuItem.id ] = block.clientId;\n\t\t\tconst menuItems = yield resolveMenuItems( menuId );\n\t\t\tyield dispatch(\n\t\t\t\t'core',\n\t\t\t\t'receiveEntityRecords',\n\t\t\t\t'root',\n\t\t\t\t'menuItem',\n\t\t\t\t[ ...menuItems, menuItem ],\n\t\t\t\tmenuItemsQuery( menuId ),\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t\tstack.push( ...block.innerBlocks );\n\t}\n\n\tyield {\n\t\ttype: 'SET_MENU_ITEM_TO_CLIENT_ID_MAPPING',\n\t\tpostId: post.id,\n\t\tmapping,\n\t};\n} );\n\n/**\n * Converts all the blocks into menu items and submits a batch request to save everything at once.\n *\n * @param {Object} post A navigation post to process\n * @return {Function} An action creator\n */\nexport const saveNavigationPost = serializeProcessing( function* ( post ) {\n\tconst menuId = post.meta.menuId;\n\tconst menuItemsByClientId = mapMenuItemsByClientId(\n\t\tyield resolveMenuItems( menuId ),\n\t\tyield getMenuItemToClientIdMapping( post.id )\n\t);\n\n\ttry {\n\t\tconst response = yield* batchSave(\n\t\t\tmenuId,\n\t\t\tmenuItemsByClientId,\n\t\t\tpost.blocks[ 0 ]\n\t\t);\n\t\tif ( ! response.success ) {\n\t\t\tthrow new Error();\n\t\t}\n\t\tyield dispatch(\n\t\t\t'core/notices',\n\t\t\t'createSuccessNotice',\n\t\t\t__( 'Navigation saved.' ),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t}\n\t\t);\n\t} catch ( e ) {\n\t\tyield dispatch(\n\t\t\t'core/notices',\n\t\t\t'createErrorNotice',\n\t\t\t__( 'There was an error.' ),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t}\n\t\t);\n\t}\n} );\n\nfunction mapMenuItemsByClientId( menuItems, clientIdsByMenuId ) {\n\tconst result = {};\n\tif ( ! menuItems || ! clientIdsByMenuId ) {\n\t\treturn result;\n\t}\n\tfor ( const menuItem of menuItems ) {\n\t\tconst clientId = clientIdsByMenuId[ menuItem.id ];\n\t\tif ( clientId ) {\n\t\t\tresult[ clientId ] = menuItem;\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction* batchSave( menuId, menuItemsByClientId, navigationBlock ) {\n\tconst { nonce, stylesheet } = yield apiFetch( {\n\t\tpath: '/__experimental/customizer-nonces/get-save-nonce',\n\t} );\n\tif ( ! nonce ) {\n\t\tthrow new Error();\n\t}\n\n\t// eslint-disable-next-line no-undef\n\tconst body = new FormData();\n\tbody.append( 'wp_customize', 'on' );\n\tbody.append( 'customize_theme', stylesheet );\n\tbody.append( 'nonce', nonce );\n\tbody.append( 'customize_changeset_uuid', uuid() );\n\tbody.append( 'customize_autosaved', 'on' );\n\tbody.append( 'customize_changeset_status', 'publish' );\n\tbody.append( 'action', 'customize_save' );\n\tbody.append(\n\t\t'customized',\n\t\tcomputeCustomizedAttribute(\n\t\t\tnavigationBlock.innerBlocks,\n\t\t\tmenuId,\n\t\t\tmenuItemsByClientId\n\t\t)\n\t);\n\n\treturn yield apiFetch( {\n\t\turl: '/wp-admin/admin-ajax.php',\n\t\tmethod: 'POST',\n\t\tbody,\n\t} );\n}\n\nfunction computeCustomizedAttribute( blocks, menuId, menuItemsByClientId ) {\n\tconst blocksList = blocksTreeToFlatList( blocks );\n\tconst dataList = blocksList.map( ( { block, parentId, position } ) =>\n\t\tblockToRequestItem( block, parentId, position )\n\t);\n\n\t// Create an object like { \"nav_menu_item[12]\": {...}} }\n\tconst computeKey = ( item ) => `nav_menu_item[${ item.id }]`;\n\tconst dataObject = keyBy( dataList, computeKey );\n\n\t// Deleted menu items should be sent as false, e.g. { \"nav_menu_item[13]\": false }\n\tfor ( const clientId in menuItemsByClientId ) {\n\t\tconst key = computeKey( menuItemsByClientId[ clientId ] );\n\t\tif ( ! ( key in dataObject ) ) {\n\t\t\tdataObject[ key ] = false;\n\t\t}\n\t}\n\n\treturn JSON.stringify( dataObject );\n\n\tfunction blocksTreeToFlatList( innerBlocks, parentId = 0 ) {\n\t\treturn innerBlocks.flatMap( ( block, index ) =>\n\t\t\t[ { block, parentId, position: index + 1 } ].concat(\n\t\t\t\tblocksTreeToFlatList(\n\t\t\t\t\tblock.innerBlocks,\n\t\t\t\t\tgetMenuItemForBlock( block )?.id\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tfunction blockToRequestItem( block, parentId, position ) {\n\t\tconst menuItem = omit( getMenuItemForBlock( block ), 'menus', 'meta' );\n\n\t\tlet attributes;\n\n\t\tif ( block.name === 'core/navigation-link' ) {\n\t\t\tattributes = {\n\t\t\t\ttype: 'custom',\n\t\t\t\ttitle: block.attributes?.label,\n\t\t\t\toriginal_title: '',\n\t\t\t\turl: block.attributes.url,\n\t\t\t};\n\t\t} else {\n\t\t\tattributes = {\n\t\t\t\ttype: 'html',\n\t\t\t\tcontent: serialize( block ),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t...menuItem,\n\t\t\t...attributes,\n\t\t\tposition,\n\t\t\tclasses: ( menuItem.classes || [] ).join( ' ' ),\n\t\t\txfn: ( menuItem.xfn || [] ).join( ' ' ),\n\t\t\tnav_menu_term_id: menuId,\n\t\t\tmenu_item_parent: parentId,\n\t\t\tstatus: 'publish',\n\t\t\t_invalid: false,\n\t\t};\n\t}\n\n\tfunction getMenuItemForBlock( block ) {\n\t\treturn omit( menuItemsByClientId[ block.clientId ] || {}, '_links' );\n\t}\n}\n\n/**\n * This wrapper guarantees serial execution of data processing actions.\n *\n * Examples:\n * * saveNavigationPost() needs to wait for all the missing items to be created.\n * * Concurrent createMissingMenuItems() could result in sending more requests than required.\n *\n * @param {Function} callback An action creator to wrap\n * @return {Function} Original callback wrapped in a serial execution context\n */\nfunction serializeProcessing( callback ) {\n\treturn function* ( post ) {\n\t\tconst postId = post.id;\n\t\tconst isProcessing = yield isProcessingPost( postId );\n\n\t\tif ( isProcessing ) {\n\t\t\tyield {\n\t\t\t\ttype: 'ENQUEUE_AFTER_PROCESSING',\n\t\t\t\tpostId,\n\t\t\t\taction: callback,\n\t\t\t};\n\t\t\treturn { status: 'pending' };\n\t\t}\n\t\tyield {\n\t\t\ttype: 'POP_PENDING_ACTION',\n\t\t\tpostId,\n\t\t\taction: callback,\n\t\t};\n\n\t\tyield {\n\t\t\ttype: 'START_PROCESSING_POST',\n\t\t\tpostId,\n\t\t};\n\n\t\ttry {\n\t\t\tyield* callback(\n\t\t\t\t// re-select the post as it could be outdated by now\n\t\t\t\tyield getNavigationPostForMenu( post.meta.menuId )\n\t\t\t);\n\t\t} finally {\n\t\t\tyield {\n\t\t\t\ttype: 'FINISH_PROCESSING_POST',\n\t\t\t\tpostId,\n\t\t\t\taction: callback,\n\t\t\t};\n\n\t\t\tconst pendingActions = yield getPendingActions( postId );\n\t\t\tif ( pendingActions.length ) {\n\t\t\t\tconst serializedCallback = serializeProcessing(\n\t\t\t\t\tpendingActions[ 0 ]\n\t\t\t\t);\n\n\t\t\t\tyield* serializedCallback( post );\n\t\t\t}\n\t\t}\n\t};\n}\n"]}
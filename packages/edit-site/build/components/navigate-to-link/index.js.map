{"version":3,"sources":["@wordpress/edit-site/src/components/navigate-to-link/index.js"],"names":["NavigateToLink","type","id","activePage","onActivePageChange","pageEntity","select","getEntityRecord","registry","templateId","setTemplateId","link","__experimentalResolveSelect","getEntityRecords","then","newTemplateId","onClick","path","slug","context","postType","postId"],"mappings":";;;;;;;;;AAIA;;;;AADA;;AAEA;;AACA;;AACA;;AAKA;;AAZA;;;;AASA;;;AAKe,SAASA,cAAT,OAKX;AAAA,MAJHC,IAIG,QAJHA,IAIG;AAAA,MAHHC,EAGG,QAHHA,EAGG;AAAA,MAFHC,UAEG,QAFHA,UAEG;AAAA,MADHC,kBACG,QADHA,kBACG;AACH,MAAMC,UAAU,GAAG,qBAClB,UAAEC,MAAF;AAAA,WACCL,IAAI,IACJC,EADA,IAEAD,IAAI,KAAK,KAFT,IAGAK,MAAM,CAAE,MAAF,CAAN,CAAiBC,eAAjB,CAAkC,UAAlC,EAA8CN,IAA9C,EAAoDC,EAApD,CAJD;AAAA,GADkB,EAMlB,CAAED,IAAF,EAAQC,EAAR,CANkB,CAAnB;AASA,MAAMM,QAAQ,GAAG,wBAAjB;;AAVG,kBAWmC,wBAXnC;AAAA;AAAA,MAWKC,UAXL;AAAA,MAWiBC,aAXjB;;AAYH,0BAAW,YAAM;AAChB,QAAKL,UAAL,EACC,yBACCA,UAAU,CAACM,IADZ,EAECH,QAAQ,CAACI,2BAAT,CAAsC,MAAtC,EAA+CC,gBAFhD,EAGEC,IAHF,CAIC,UAAEC,aAAF;AAAA,aAAqBL,aAAa,CAAEK,aAAF,CAAlC;AAAA,KAJD,EAKC;AAAA,aAAML,aAAa,CAAE,IAAF,CAAnB;AAAA,KALD;AAOD,GATD,EASG,CAAEL,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEM,IAAd,EAAoBH,QAApB,CATH;AAWA,MAAMQ,OAAO,GAAG,sBAAS,YAAM;AAC9B,QAAK,CAAEX,UAAF,IAAgB,CAAEI,UAAvB,EAAoC,OAAO,IAAP;AACpC,QAAMQ,IAAI,GAAG,gCAAuBZ,UAAU,CAACM,IAAlC,CAAb;AACA,QAAKM,IAAI,KAAKd,UAAU,CAACc,IAAzB,EAAgC,OAAO,IAAP;AAChC,WAAO;AAAA,aACNb,kBAAkB,CAAE;AACnBH,QAAAA,IAAI,EAAJA,IADmB;AAEnBiB,QAAAA,IAAI,EAAEb,UAAU,CAACa,IAFE;AAGnBD,QAAAA,IAAI,EAAJA,IAHmB;AAInBE,QAAAA,OAAO,EAAE;AACRC,UAAAA,QAAQ,EAAEf,UAAU,CAACJ,IADb;AAERoB,UAAAA,MAAM,EAAEhB,UAAU,CAACH;AAFX;AAJU,OAAF,CADZ;AAAA,KAAP;AAUA,GAde,EAcb,CAAEG,UAAF,EAAcI,UAAd,EAA0BN,UAAU,CAACc,IAArC,EAA2Cb,kBAA3C,CAda,CAAhB;AAeA,SACCY,OAAO,IACN,4BAAC,kBAAD;AACC,IAAA,IAAI,EAAC,oBADN;AAEC,IAAA,KAAK,EAAG,cAAI,oBAAJ,CAFT;AAGC,IAAA,OAAO,EAAGA;AAHX,IAFF;AASA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { getPathAndQueryString } from '@wordpress/url';\nimport { useState, useEffect, useMemo } from '@wordpress/element';\nimport { useSelect, useRegistry } from '@wordpress/data';\nimport { Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { findTemplate } from '../../utils';\n\nexport default function NavigateToLink( {\n\ttype,\n\tid,\n\tactivePage,\n\tonActivePageChange,\n} ) {\n\tconst pageEntity = useSelect(\n\t\t( select ) =>\n\t\t\ttype &&\n\t\t\tid &&\n\t\t\ttype !== 'URL' &&\n\t\t\tselect( 'core' ).getEntityRecord( 'postType', type, id ),\n\t\t[ type, id ]\n\t);\n\n\tconst registry = useRegistry();\n\tconst [ templateId, setTemplateId ] = useState();\n\tuseEffect( () => {\n\t\tif ( pageEntity )\n\t\t\tfindTemplate(\n\t\t\t\tpageEntity.link,\n\t\t\t\tregistry.__experimentalResolveSelect( 'core' ).getEntityRecords\n\t\t\t).then(\n\t\t\t\t( newTemplateId ) => setTemplateId( newTemplateId ),\n\t\t\t\t() => setTemplateId( null )\n\t\t\t);\n\t}, [ pageEntity?.link, registry ] );\n\n\tconst onClick = useMemo( () => {\n\t\tif ( ! pageEntity || ! templateId ) return null;\n\t\tconst path = getPathAndQueryString( pageEntity.link );\n\t\tif ( path === activePage.path ) return null;\n\t\treturn () =>\n\t\t\tonActivePageChange( {\n\t\t\t\ttype,\n\t\t\t\tslug: pageEntity.slug,\n\t\t\t\tpath,\n\t\t\t\tcontext: {\n\t\t\t\t\tpostType: pageEntity.type,\n\t\t\t\t\tpostId: pageEntity.id,\n\t\t\t\t},\n\t\t\t} );\n\t}, [ pageEntity, templateId, activePage.path, onActivePageChange ] );\n\treturn (\n\t\tonClick && (\n\t\t\t<Button\n\t\t\t\ticon=\"welcome-write-blog\"\n\t\t\t\tlabel={ __( 'Edit Page Template' ) }\n\t\t\t\tonClick={ onClick }\n\t\t\t/>\n\t\t)\n\t);\n}\n"]}
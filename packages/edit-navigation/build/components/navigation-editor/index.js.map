{"version":3,"sources":["@wordpress/edit-navigation/src/components/navigation-editor/index.js"],"names":["NavigationEditor","menuId","blockEditorSettings","onDeleteMenu","select","post","getNavigationPostForMenu","hasResolved","hasResolvedNavigationPost","NavigationPostEditor","isLargeViewport","blocks","onInput","onChange","saveNavigationPost","save","templateLock","hasFixedToolbar","meta"],"mappings":";;;;;;;;;;;;;;;AAGA;;AAIA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEe,SAASA,gBAAT,OAIX;AAAA,MAHHC,MAGG,QAHHA,MAGG;AAAA,MAFHC,mBAEG,QAFHA,mBAEG;AAAA,MADHC,YACG,QADHA,YACG;;AAAA,mBAC2B,qBAAW,UAAEC,MAAF;AAAA,WAAgB;AACxDC,MAAAA,IAAI,EAAED,MAAM,CAAE,sBAAF,CAAN,CAAiCE,wBAAjC,CACLL,MADK,CADkD;AAIxDM,MAAAA,WAAW,EAAEH,MAAM,CAAE,sBAAF,CAAN,CAAiCI,yBAAjC,CACZP,MADY;AAJ2C,KAAhB;AAAA,GAAX,CAD3B;AAAA,MACKI,IADL,cACKA,IADL;AAAA,MACWE,WADX,cACWA,WADX;;AASH,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,4BAAC,yCAAD,CAA8B,QAA9B,OADD,EAEC,4BAAC,kBAAD,CAA2B,QAA3B,OAFD,EAIG,CAAEA,WAAF,GACD,4BAAC,mBAAD,OADC,GAGD,4BAAC,oBAAD;AACC,IAAA,IAAI,EAAGF,IADR;AAEC,IAAA,mBAAmB,EAAGH,mBAFvB;AAGC,IAAA,YAAY,EAAGC;AAHhB,IAPF,CADD;AAgBA;;AAED,SAASM,oBAAT,QAA6E;AAAA,MAA5CJ,IAA4C,SAA5CA,IAA4C;AAAA,MAAtCH,mBAAsC,SAAtCA,mBAAsC;AAAA,MAAjBC,YAAiB,SAAjBA,YAAiB;AAC5E,MAAMO,eAAe,GAAG,+BAAkB,QAAlB,CAAxB;;AAD4E,8BAEtC,uCAA0BL,IAA1B,CAFsC;AAAA;AAAA,MAEpEM,MAFoE;AAAA,MAE5DC,OAF4D;AAAA,MAEnDC,QAFmD;;AAAA,qBAG7C,uBAAa,sBAAb,CAH6C;AAAA,MAGpEC,kBAHoE,gBAGpEA,kBAHoE;;AAI5E,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAMD,kBAAkB,CAAET,IAAF,CAAxB;AAAA,GAAb;;AACA,SACC,4BAAC,gCAAD;AACC,IAAA,KAAK,EAAGM,MADT;AAEC,IAAA,OAAO,EAAGC,OAFX;AAGC,IAAA,QAAQ,EAAGC,QAHZ;AAIC,IAAA,QAAQ,oBACJX,mBADI;AAEPc,MAAAA,YAAY,EAAE,KAFP;AAGPC,MAAAA,eAAe,EAAE;AAHV,MAJT;AASC,IAAA,cAAc,EAAG;AATlB,KAWC,4BAAC,yCAAD,OAXD,EAYC,4BAAC,kBAAD;AAA2B,IAAA,UAAU,EAAGF;AAAxC,IAZD,EAaC,4BAAC,gCAAD;AACC,IAAA,MAAM,EAAGJ,MADV;AAEC,IAAA,WAAW,EAAGD;AAFf,IAbD,EAiBC,4BAAC,wBAAD;AACC,IAAA,UAAU,EAAGK,IADd;AAEC,IAAA,MAAM,EAAGV,IAAI,CAACa,IAAL,CAAUjB,MAFpB;AAGC,IAAA,YAAY,EAAGE;AAHhB,IAjBD,CADD;AAyBA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tBlockEditorKeyboardShortcuts,\n\tBlockEditorProvider,\n} from '@wordpress/block-editor';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { Spinner } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport NavigationEditorShortcuts from './shortcuts';\nimport BlockEditorArea from './block-editor-area';\nimport NavigationStructureArea from './navigation-structure-area';\nimport useNavigationBlockEditor from './use-navigation-block-editor';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nexport default function NavigationEditor( {\n\tmenuId,\n\tblockEditorSettings,\n\tonDeleteMenu,\n} ) {\n\tconst { post, hasResolved } = useSelect( ( select ) => ( {\n\t\tpost: select( 'core/edit-navigation' ).getNavigationPostForMenu(\n\t\t\tmenuId\n\t\t),\n\t\thasResolved: select( 'core/edit-navigation' ).hasResolvedNavigationPost(\n\t\t\tmenuId\n\t\t),\n\t} ) );\n\treturn (\n\t\t<div className=\"edit-navigation-editor\">\n\t\t\t<BlockEditorKeyboardShortcuts.Register />\n\t\t\t<NavigationEditorShortcuts.Register />\n\n\t\t\t{ ! hasResolved ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<NavigationPostEditor\n\t\t\t\t\tpost={ post }\n\t\t\t\t\tblockEditorSettings={ blockEditorSettings }\n\t\t\t\t\tonDeleteMenu={ onDeleteMenu }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nfunction NavigationPostEditor( { post, blockEditorSettings, onDeleteMenu } ) {\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst [ blocks, onInput, onChange ] = useNavigationBlockEditor( post );\n\tconst { saveNavigationPost } = useDispatch( 'core/edit-navigation' );\n\tconst save = () => saveNavigationPost( post );\n\treturn (\n\t\t<BlockEditorProvider\n\t\t\tvalue={ blocks }\n\t\t\tonInput={ onInput }\n\t\t\tonChange={ onChange }\n\t\t\tsettings={ {\n\t\t\t\t...blockEditorSettings,\n\t\t\t\ttemplateLock: 'all',\n\t\t\t\thasFixedToolbar: true,\n\t\t\t} }\n\t\t\tuseSubRegistry={ false }\n\t\t>\n\t\t\t<BlockEditorKeyboardShortcuts />\n\t\t\t<NavigationEditorShortcuts saveBlocks={ save } />\n\t\t\t<NavigationStructureArea\n\t\t\t\tblocks={ blocks }\n\t\t\t\tinitialOpen={ isLargeViewport }\n\t\t\t/>\n\t\t\t<BlockEditorArea\n\t\t\t\tsaveBlocks={ save }\n\t\t\t\tmenuId={ post.meta.menuId }\n\t\t\t\tonDeleteMenu={ onDeleteMenu }\n\t\t\t/>\n\t\t</BlockEditorProvider>\n\t);\n}\n"]}
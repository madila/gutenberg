{"version":3,"sources":["@wordpress/block-library/src/embed/edit.js"],"names":["getResponsiveHelp","checked","getEmbedEditComponent","title","icon","responsive","previewable","EmbedEditComponent","props","attributes","cannotEmbed","fetching","isSelected","onReplace","preview","setAttributes","themeSupportsResponsive","tryAgain","insertBlocksAfter","url","setURL","isEditingURL","setIsEditingURL","getMergedAttributes","className","allowResponsive","handleIncomingPreview","upgradedBlock","toggleResponsive","html","newAllowResponsive","newURL","replace","label","event","preventDefault","target","value","previewAttributes","caption","type"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\tcreateUpgradedEmbedBlock,\n\tgetClassNames,\n\tfallback,\n\tgetAttributesFromPreview,\n} from './util';\nimport EmbedControls from './embed-controls';\nimport EmbedLoading from './embed-loading';\nimport EmbedPlaceholder from './embed-placeholder';\nimport EmbedPreview from './embed-preview';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useState, useEffect } from '@wordpress/element';\n\nfunction getResponsiveHelp( checked ) {\n\treturn checked\n\t\t? __(\n\t\t\t\t'This embed will preserve its aspect ratio when the browser is resized.'\n\t\t  )\n\t\t: __(\n\t\t\t\t'This embed may not preserve its aspect ratio when the browser is resized.'\n\t\t  );\n}\n\nexport function getEmbedEditComponent(\n\ttitle,\n\ticon,\n\tresponsive = true,\n\tpreviewable = true\n) {\n\treturn function EmbedEditComponent( props ) {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tcannotEmbed,\n\t\t\tfetching,\n\t\t\tisSelected,\n\t\t\tonReplace,\n\t\t\tpreview,\n\t\t\tsetAttributes,\n\t\t\tthemeSupportsResponsive,\n\t\t\ttryAgain,\n\t\t\tinsertBlocksAfter,\n\t\t} = props;\n\n\t\tconst [ url, setURL ] = useState( attributes.url );\n\t\tconst [ isEditingURL, setIsEditingURL ] = useState( false );\n\n\t\t/**\n\t\t * @return {Object} Attributes derived from the preview, merged with the current attributes.\n\t\t */\n\t\tconst getMergedAttributes = () => {\n\t\t\tconst { className, allowResponsive } = attributes;\n\t\t\treturn {\n\t\t\t\t...attributes,\n\t\t\t\t...getAttributesFromPreview(\n\t\t\t\t\tpreview,\n\t\t\t\t\ttitle,\n\t\t\t\t\tclassName,\n\t\t\t\t\tresponsive,\n\t\t\t\t\tallowResponsive\n\t\t\t\t),\n\t\t\t};\n\t\t};\n\n\t\tconst handleIncomingPreview = () => {\n\t\t\tsetAttributes( getMergedAttributes() );\n\t\t\tif ( onReplace ) {\n\t\t\t\tconst upgradedBlock = createUpgradedEmbedBlock(\n\t\t\t\t\tprops,\n\t\t\t\t\tgetMergedAttributes()\n\t\t\t\t);\n\n\t\t\t\tif ( upgradedBlock ) {\n\t\t\t\t\tonReplace( upgradedBlock );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst toggleResponsive = () => {\n\t\t\tconst { allowResponsive, className } = attributes;\n\t\t\tconst { html } = preview;\n\t\t\tconst newAllowResponsive = ! allowResponsive;\n\n\t\t\tsetAttributes( {\n\t\t\t\tallowResponsive: newAllowResponsive,\n\t\t\t\tclassName: getClassNames(\n\t\t\t\t\thtml,\n\t\t\t\t\tclassName,\n\t\t\t\t\tresponsive && newAllowResponsive\n\t\t\t\t),\n\t\t\t} );\n\t\t};\n\n\t\tuseEffect( () => {\n\t\t\tif ( ! preview?.html ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If we can embed the url, bail early.\n\t\t\tif ( ! cannotEmbed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// At this stage, we either have a new preview or a new URL, but we can't embed it.\n\t\t\t// If we are already fetching the preview, bail early.\n\t\t\tif ( fetching ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// At this stage, we're not fetching the preview, so we know it can't be embedded, so try\n\t\t\t// removing any trailing slash, and resubmit.\n\t\t\tconst newURL = attributes.url.replace( /\\/$/, '' );\n\t\t\tsetURL( newURL );\n\t\t\tsetIsEditingURL( false );\n\t\t\tsetAttributes( { url: newURL } );\n\t\t}, [ preview?.html, attributes.url ] );\n\n\t\tuseEffect( () => {\n\t\t\tif ( preview && ! isEditingURL ) {\n\t\t\t\thandleIncomingPreview();\n\t\t\t}\n\t\t}, [ preview, isEditingURL ] );\n\n\t\tif ( fetching ) {\n\t\t\treturn <EmbedLoading />;\n\t\t}\n\n\t\t// translators: %s: type of embed e.g: \"YouTube\", \"Twitter\", etc. \"Embed\" is used when no specific type exists\n\t\tconst label = sprintf( __( '%s URL' ), title );\n\n\t\t// No preview, or we can't embed the current URL, or we've clicked the edit button.\n\t\tif ( ! preview || cannotEmbed || isEditingURL ) {\n\t\t\treturn (\n\t\t\t\t<EmbedPlaceholder\n\t\t\t\t\ticon={ icon }\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tonSubmit={ ( event ) => {\n\t\t\t\t\t\tif ( event ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetIsEditingURL( false );\n\t\t\t\t\t\tsetAttributes( { url } );\n\t\t\t\t\t} }\n\t\t\t\t\tvalue={ url }\n\t\t\t\t\tcannotEmbed={ cannotEmbed }\n\t\t\t\t\tonChange={ ( event ) => setURL( event.target.value ) }\n\t\t\t\t\tfallback={ () => fallback( url, onReplace ) }\n\t\t\t\t\ttryAgain={ tryAgain }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\t// Even though we set attributes that get derived from the preview,\n\t\t// we don't access them directly because for the initial render,\n\t\t// the `setAttributes` call will not have taken effect. If we're\n\t\t// rendering responsive content, setting the responsive classes\n\t\t// after the preview has been rendered can result in unwanted\n\t\t// clipping or scrollbars. The `getAttributesFromPreview` function\n\t\t// that `getMergedAttributes` uses is memoized so that we're not\n\t\t// calculating them on every render.\n\t\tconst previewAttributes = getMergedAttributes(\n\t\t\tprops,\n\t\t\ttitle,\n\t\t\tresponsive\n\t\t);\n\t\tconst { caption, type, allowResponsive } = previewAttributes;\n\t\tconst className = classnames(\n\t\t\tpreviewAttributes.className,\n\t\t\tprops.className\n\t\t);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EmbedControls\n\t\t\t\t\tshowEditButton={ preview && ! cannotEmbed }\n\t\t\t\t\tthemeSupportsResponsive={ themeSupportsResponsive }\n\t\t\t\t\tblockSupportsResponsive={ responsive }\n\t\t\t\t\tallowResponsive={ allowResponsive }\n\t\t\t\t\tgetResponsiveHelp={ getResponsiveHelp }\n\t\t\t\t\ttoggleResponsive={ toggleResponsive }\n\t\t\t\t\tswitchBackToURLInput={ () => setIsEditingURL( true ) }\n\t\t\t\t/>\n\t\t\t\t<EmbedPreview\n\t\t\t\t\tpreview={ preview }\n\t\t\t\t\tpreviewable={ previewable }\n\t\t\t\t\tclassName={ className }\n\t\t\t\t\turl={ url }\n\t\t\t\t\ttype={ type }\n\t\t\t\t\tcaption={ caption }\n\t\t\t\t\tonCaptionChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t}\n\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t\tlabel={ label }\n\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t};\n}\n"]}
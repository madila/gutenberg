{"version":3,"sources":["@wordpress/block-directory/src/store/actions.js"],"names":["installBlockType","uninstallBlockType","fetchDownloadableBlocks","filterValue","type","receiveDownloadableBlocks","downloadableBlocks","block","id","assets","success","clearErrorNotice","Array","isArray","length","Error","setIsInstalling","url","links","data","status","method","path","slug","response","_links","addInstalledBlockType","registeredBlocks","filter","i","name","message","isFatal","fatalAPIErrors","folder_exists","unable_to_connect_to_filesystem","code","setErrorNotice","removeInstalledBlockType","item","blockId","isInstalling"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { apiFetch, dispatch, select } from '@wordpress/data-controls';\n\n/**\n * Internal dependencies\n */\nimport { loadAssets } from './controls';\nimport getPluginUrl from './utils/get-plugin-url';\n\n/**\n * Returns an action object used in signalling that the downloadable blocks\n * have been requested and is loading.\n *\n * @param {string} filterValue Search string.\n *\n * @return {Object} Action object.\n */\nexport function fetchDownloadableBlocks( filterValue ) {\n\treturn { type: 'FETCH_DOWNLOADABLE_BLOCKS', filterValue };\n}\n\n/**\n * Returns an action object used in signalling that the downloadable blocks\n * have been updated.\n *\n * @param {Array}  downloadableBlocks Downloadable blocks.\n * @param {string} filterValue        Search string.\n *\n * @return {Object} Action object.\n */\nexport function receiveDownloadableBlocks( downloadableBlocks, filterValue ) {\n\treturn {\n\t\ttype: 'RECEIVE_DOWNLOADABLE_BLOCKS',\n\t\tdownloadableBlocks,\n\t\tfilterValue,\n\t};\n}\n\n/**\n * Action triggered to install a block plugin.\n *\n * @param {Object} block The block item returned by search.\n *\n * @return {boolean} Whether the block was successfully installed & loaded.\n */\nexport function* installBlockType( block ) {\n\tconst { id, assets } = block;\n\tlet success = false;\n\tyield clearErrorNotice( id );\n\ttry {\n\t\tif ( ! Array.isArray( assets ) || ! assets.length ) {\n\t\t\tthrow new Error( __( 'Block has no assets.' ) );\n\t\t}\n\t\tyield setIsInstalling( block.id, true );\n\n\t\t// If we have a wp:plugin link, the plugin is installed but inactive.\n\t\tconst url = getPluginUrl( block );\n\t\tlet links = {};\n\t\tif ( url ) {\n\t\t\tyield apiFetch( {\n\t\t\t\turl,\n\t\t\t\tdata: {\n\t\t\t\t\tstatus: 'active',\n\t\t\t\t},\n\t\t\t\tmethod: 'PUT',\n\t\t\t} );\n\t\t} else {\n\t\t\tconst response = yield apiFetch( {\n\t\t\t\tpath: 'wp/v2/plugins',\n\t\t\t\tdata: {\n\t\t\t\t\tslug: block.id,\n\t\t\t\t\tstatus: 'active',\n\t\t\t\t},\n\t\t\t\tmethod: 'POST',\n\t\t\t} );\n\t\t\t// Add the `self` link for newly-installed blocks.\n\t\t\tlinks = response._links;\n\t\t}\n\n\t\tyield addInstalledBlockType( {\n\t\t\t...block,\n\t\t\tlinks: { ...block.links, ...links },\n\t\t} );\n\n\t\tyield loadAssets( assets );\n\t\tconst registeredBlocks = yield select( 'core/blocks', 'getBlockTypes' );\n\t\tif (\n\t\t\t! registeredBlocks.length ||\n\t\t\t! registeredBlocks.filter( ( i ) => i.name === block.name ).length\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t__( 'Error registering block. Try reloading the page.' )\n\t\t\t);\n\t\t}\n\n\t\tsuccess = true;\n\t} catch ( error ) {\n\t\tlet message = error.message || __( 'An error occurred.' );\n\n\t\t// Errors we throw are fatal\n\t\tlet isFatal = error instanceof Error;\n\n\t\t// Specific API errors that are fatal\n\t\tconst fatalAPIErrors = {\n\t\t\tfolder_exists: __(\n\t\t\t\t'This block is already installed. Try reloading the page.'\n\t\t\t),\n\t\t\tunable_to_connect_to_filesystem: __(\n\t\t\t\t'Error installing block. You can reload the page and try again.'\n\t\t\t),\n\t\t};\n\n\t\tif ( fatalAPIErrors[ error.code ] ) {\n\t\t\tisFatal = true;\n\t\t\tmessage = fatalAPIErrors[ error.code ];\n\t\t}\n\n\t\tyield setErrorNotice( id, message, isFatal );\n\t}\n\tyield setIsInstalling( block.id, false );\n\treturn success;\n}\n\n/**\n * Action triggered to uninstall a block plugin.\n *\n * @param {Object} block The blockType object.\n */\nexport function* uninstallBlockType( block ) {\n\ttry {\n\t\tyield apiFetch( {\n\t\t\turl: getPluginUrl( block ),\n\t\t\tdata: {\n\t\t\t\tstatus: 'inactive',\n\t\t\t},\n\t\t\tmethod: 'PUT',\n\t\t} );\n\t\tyield apiFetch( {\n\t\t\turl: getPluginUrl( block ),\n\t\t\tmethod: 'DELETE',\n\t\t} );\n\t\tyield removeInstalledBlockType( block );\n\t} catch ( error ) {\n\t\tyield dispatch(\n\t\t\t'core/notices',\n\t\t\t'createErrorNotice',\n\t\t\terror.message || __( 'An error occurred.' )\n\t\t);\n\t}\n}\n\n/**\n * Returns an action object used to add a newly installed block type.\n *\n * @param {Object} item The block item with the block id and name.\n *\n * @return {Object} Action object.\n */\nexport function addInstalledBlockType( item ) {\n\treturn {\n\t\ttype: 'ADD_INSTALLED_BLOCK_TYPE',\n\t\titem,\n\t};\n}\n\n/**\n * Returns an action object used to remove a newly installed block type.\n *\n * @param {string} item The block item with the block id and name.\n *\n * @return {Object} Action object.\n */\nexport function removeInstalledBlockType( item ) {\n\treturn {\n\t\ttype: 'REMOVE_INSTALLED_BLOCK_TYPE',\n\t\titem,\n\t};\n}\n\n/**\n * Returns an action object used to indicate install in progress\n *\n * @param {string} blockId\n * @param {boolean} isInstalling\n *\n * @return {Object} Action object.\n */\nexport function setIsInstalling( blockId, isInstalling ) {\n\treturn {\n\t\ttype: 'SET_INSTALLING_BLOCK',\n\t\tblockId,\n\t\tisInstalling,\n\t};\n}\n\n/**\n * Sets an error notice string to be displayed to the user\n *\n * @param {string} blockId The ID of the block plugin. eg: my-block\n * @param {string} message  The message shown in the notice.\n * @param {boolean} isFatal Whether the user can recover from the error\n *\n * @return {Object} Action object.\n */\nexport function setErrorNotice( blockId, message, isFatal = false ) {\n\treturn {\n\t\ttype: 'SET_ERROR_NOTICE',\n\t\tblockId,\n\t\tmessage,\n\t\tisFatal,\n\t};\n}\n\n/**\n * Sets the error notice to empty for specific block\n *\n * @param {string} blockId The ID of the block plugin. eg: my-block\n *\n * @return {Object} Action object.\n */\nexport function clearErrorNotice( blockId ) {\n\treturn {\n\t\ttype: 'CLEAR_ERROR_NOTICE',\n\t\tblockId,\n\t};\n}\n"]}
{"version":3,"sources":["@wordpress/block-editor/src/components/use-block-drop-zone/index.js"],"names":["getNearestBlockIndex","elements","position","orientation","x","y","isHorizontal","candidateIndex","candidateDistance","forEach","element","index","classList","contains","rect","getBoundingClientRect","cursorLateralPosition","cursorForwardPosition","edgeLateralStart","top","left","edgeLateralEnd","bottom","right","edgeLateralPosition","leadingEdgeForwardPosition","trailingEdgeForwardPosition","leadingEdgeDistance","Math","sqrt","undefined","abs","trailingEdgeDistance","nextBlockOffset","parseDropEvent","event","result","srcRootClientId","srcClientIds","type","dataTransfer","Object","assign","JSON","parse","getData","err","useBlockDropZone","targetRootClientId","rootClientId","targetBlockIndex","setTargetBlockIndex","select","getBlockListSettings","_getClientIdsOfDescendants","getClientIdsOfDescendants","_getBlockIndex","getBlockIndex","getSettings","getTemplateLock","hasUploadPermissions","mediaUpload","isLockedAll","insertBlocks","updateBlockAttributes","moveBlocksToPosition","onFilesDrop","files","transformation","transform","isMatch","blocks","onHTMLDrop","HTML","mode","length","onDrop","sourceRootClientId","sourceClientIds","dropType","sourceBlockIndex","includes","some","id","isAtSameLevel","insertIndex","isDisabled","withPosition","blockElements","Array","from","current","children","targetIndex"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __unstableUseDropZone as useDropZone } from '@wordpress/components';\nimport {\n\tpasteHandler,\n\tgetBlockTransforms,\n\tfindTransform,\n} from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useCallback, useState } from '@wordpress/element';\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\n/**\n * @typedef  {Object} WPBlockDragPosition\n * @property {number} x The horizontal position of a the block being dragged.\n * @property {number} y The vertical position of the block being dragged.\n */\n\n/**\n * The orientation of a block list.\n *\n * @typedef {'horizontal'|'vertical'|undefined} WPBlockListOrientation\n */\n\n/**\n * Given a list of block DOM elements finds the index that a block should be dropped\n * at.\n *\n * This function works for both horizontal and vertical block lists and uses the following\n * terms for its variables:\n *\n * - Lateral, meaning the axis running horizontally when a block list is vertical and vertically when a block list is horizontal.\n * - Forward, meaning the axis running vertically when a block list is vertical and horizontally\n * when a block list is horizontal.\n *\n *\n * @param {Element[]}              elements    Array of DOM elements that represent each block in a block list.\n * @param {WPBlockDragPosition}    position    The position of the item being dragged.\n * @param {WPBlockListOrientation} orientation The orientation of a block list.\n *\n * @return {number|undefined} The block index that's closest to the drag position.\n */\nexport function getNearestBlockIndex( elements, position, orientation ) {\n\tconst { x, y } = position;\n\tconst isHorizontal = orientation === 'horizontal';\n\n\tlet candidateIndex;\n\tlet candidateDistance;\n\n\telements.forEach( ( element, index ) => {\n\t\t// Ensure the element is a block. It should have the `wp-block` class.\n\t\tif ( ! element.classList.contains( 'wp-block' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rect = element.getBoundingClientRect();\n\t\tconst cursorLateralPosition = isHorizontal ? y : x;\n\t\tconst cursorForwardPosition = isHorizontal ? x : y;\n\t\tconst edgeLateralStart = isHorizontal ? rect.top : rect.left;\n\t\tconst edgeLateralEnd = isHorizontal ? rect.bottom : rect.right;\n\n\t\t// When the cursor position is within the lateral bounds of the block,\n\t\t// measure the straight line distance to the nearest point on the\n\t\t// block's edge, else measure diagonal distance to the nearest corner.\n\t\tlet edgeLateralPosition;\n\t\tif (\n\t\t\tcursorLateralPosition >= edgeLateralStart &&\n\t\t\tcursorLateralPosition <= edgeLateralEnd\n\t\t) {\n\t\t\tedgeLateralPosition = cursorLateralPosition;\n\t\t} else if ( cursorLateralPosition < edgeLateralStart ) {\n\t\t\tedgeLateralPosition = edgeLateralStart;\n\t\t} else {\n\t\t\tedgeLateralPosition = edgeLateralEnd;\n\t\t}\n\t\tconst leadingEdgeForwardPosition = isHorizontal ? rect.left : rect.top;\n\t\tconst trailingEdgeForwardPosition = isHorizontal\n\t\t\t? rect.right\n\t\t\t: rect.bottom;\n\n\t\t// First measure the distance to the leading edge of the block.\n\t\tconst leadingEdgeDistance = Math.sqrt(\n\t\t\t( cursorLateralPosition - edgeLateralPosition ) ** 2 +\n\t\t\t\t( cursorForwardPosition - leadingEdgeForwardPosition ) ** 2\n\t\t);\n\n\t\t// If no candidate has been assigned yet or this is the nearest\n\t\t// block edge to the cursor, then assign it as the candidate.\n\t\tif (\n\t\t\tcandidateDistance === undefined ||\n\t\t\tMath.abs( leadingEdgeDistance ) < candidateDistance\n\t\t) {\n\t\t\tcandidateDistance = leadingEdgeDistance;\n\t\t\tcandidateIndex = index;\n\t\t}\n\n\t\t// Next measure the distance to the trailing edge of the block.\n\t\tconst trailingEdgeDistance = Math.sqrt(\n\t\t\t( cursorLateralPosition - edgeLateralPosition ) ** 2 +\n\t\t\t\t( cursorForwardPosition - trailingEdgeForwardPosition ) ** 2\n\t\t);\n\n\t\t// If no candidate has been assigned yet or this is the nearest\n\t\t// block edge to the cursor, then assign the next block as the candidate.\n\t\tif ( Math.abs( trailingEdgeDistance ) < candidateDistance ) {\n\t\t\tcandidateDistance = trailingEdgeDistance;\n\t\t\tlet nextBlockOffset = 1;\n\n\t\t\t// If the next block is the one being dragged, skip it and consider\n\t\t\t// the block afterwards the drop target. This is needed as the\n\t\t\t// block being dragged is set to display: none and won't display\n\t\t\t// any drop target styling.\n\t\t\tif (\n\t\t\t\telements[ index + 1 ] &&\n\t\t\t\telements[ index + 1 ].classList.contains( 'is-dragging' )\n\t\t\t) {\n\t\t\t\tnextBlockOffset = 2;\n\t\t\t}\n\n\t\t\tcandidateIndex = index + nextBlockOffset;\n\t\t}\n\t} );\n\n\treturn candidateIndex;\n}\n\n/**\n * Retrieve the data for a block drop event.\n *\n * @param {WPSyntheticEvent} event The drop event.\n *\n * @return {Object} An object with block drag and drop data.\n */\nfunction parseDropEvent( event ) {\n\tlet result = {\n\t\tsrcRootClientId: null,\n\t\tsrcClientIds: null,\n\t\ttype: null,\n\t};\n\n\tif ( ! event.dataTransfer ) {\n\t\treturn result;\n\t}\n\n\ttry {\n\t\tresult = Object.assign(\n\t\t\tresult,\n\t\t\tJSON.parse( event.dataTransfer.getData( 'text' ) )\n\t\t);\n\t} catch ( err ) {\n\t\treturn result;\n\t}\n\n\treturn result;\n}\n\n/**\n * @typedef  {Object} WPBlockDropZoneConfig\n * @property {Object} element      A React ref object pointing to the block list's DOM element.\n * @property {string} rootClientId The root client id for the block list.\n */\n\n/**\n * A React hook that can be used to make a block list handle drag and drop.\n *\n * @param {WPBlockDropZoneConfig} dropZoneConfig configuration data for the drop zone.\n *\n * @return {number|undefined} The block index that's closest to the drag position.\n */\nexport default function useBlockDropZone( {\n\telement,\n\trootClientId: targetRootClientId,\n} ) {\n\tconst [ targetBlockIndex, setTargetBlockIndex ] = useState( null );\n\n\tconst {\n\t\tgetClientIdsOfDescendants,\n\t\tgetBlockIndex,\n\t\thasUploadPermissions,\n\t\tisLockedAll,\n\t\torientation,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockListSettings,\n\t\t\t\tgetClientIdsOfDescendants: _getClientIdsOfDescendants,\n\t\t\t\tgetBlockIndex: _getBlockIndex,\n\t\t\t\tgetSettings,\n\t\t\t\tgetTemplateLock,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\treturn {\n\t\t\t\torientation: getBlockListSettings( targetRootClientId )\n\t\t\t\t\t?.orientation,\n\t\t\t\tgetClientIdsOfDescendants: _getClientIdsOfDescendants,\n\t\t\t\tgetBlockIndex: _getBlockIndex,\n\t\t\t\thasUploadPermissions: !! getSettings().mediaUpload,\n\t\t\t\tisLockedAll: getTemplateLock( targetRootClientId ) === 'all',\n\t\t\t};\n\t\t},\n\t\t[ targetRootClientId ]\n\t);\n\tconst {\n\t\tinsertBlocks,\n\t\tupdateBlockAttributes,\n\t\tmoveBlocksToPosition,\n\t} = useDispatch( 'core/block-editor' );\n\n\tconst onFilesDrop = useCallback(\n\t\t( files ) => {\n\t\t\tif ( ! hasUploadPermissions ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst transformation = findTransform(\n\t\t\t\tgetBlockTransforms( 'from' ),\n\t\t\t\t( transform ) =>\n\t\t\t\t\ttransform.type === 'files' && transform.isMatch( files )\n\t\t\t);\n\n\t\t\tif ( transformation ) {\n\t\t\t\tconst blocks = transformation.transform(\n\t\t\t\t\tfiles,\n\t\t\t\t\tupdateBlockAttributes\n\t\t\t\t);\n\t\t\t\tinsertBlocks( blocks, targetBlockIndex, targetRootClientId );\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\thasUploadPermissions,\n\t\t\tupdateBlockAttributes,\n\t\t\tinsertBlocks,\n\t\t\ttargetBlockIndex,\n\t\t\ttargetRootClientId,\n\t\t]\n\t);\n\n\tconst onHTMLDrop = useCallback(\n\t\t( HTML ) => {\n\t\t\tconst blocks = pasteHandler( { HTML, mode: 'BLOCKS' } );\n\n\t\t\tif ( blocks.length ) {\n\t\t\t\tinsertBlocks( blocks, targetBlockIndex, targetRootClientId );\n\t\t\t}\n\t\t},\n\t\t[ insertBlocks, targetBlockIndex, targetRootClientId ]\n\t);\n\n\tconst onDrop = useCallback(\n\t\t( event ) => {\n\t\t\tconst {\n\t\t\t\tsrcRootClientId: sourceRootClientId,\n\t\t\t\tsrcClientIds: sourceClientIds,\n\t\t\t\ttype: dropType,\n\t\t\t} = parseDropEvent( event );\n\n\t\t\t// If the user isn't dropping a block, return early.\n\t\t\tif ( dropType !== 'block' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sourceBlockIndex = getBlockIndex( sourceClientIds[ 0 ] );\n\n\t\t\t// If the user is dropping to the same position, return early.\n\t\t\tif (\n\t\t\t\tsourceRootClientId === targetRootClientId &&\n\t\t\t\tsourceBlockIndex === targetBlockIndex\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the user is attempting to drop a block within its own\n\t\t\t// nested blocks, return early as this would create infinite\n\t\t\t// recursion.\n\t\t\tif (\n\t\t\t\tsourceClientIds.includes( targetRootClientId ) ||\n\t\t\t\tgetClientIdsOfDescendants( sourceClientIds ).some(\n\t\t\t\t\t( id ) => id === targetRootClientId\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isAtSameLevel =\n\t\t\t\tsourceRootClientId === targetRootClientId ||\n\t\t\t\t( sourceRootClientId === '' &&\n\t\t\t\t\ttargetRootClientId === undefined );\n\n\t\t\t// If the block is kept at the same level and moved downwards,\n\t\t\t// subtract to account for blocks shifting upward to occupy its old position.\n\t\t\tconst insertIndex =\n\t\t\t\tisAtSameLevel && sourceBlockIndex < targetBlockIndex\n\t\t\t\t\t? targetBlockIndex - 1\n\t\t\t\t\t: targetBlockIndex;\n\n\t\t\tmoveBlocksToPosition(\n\t\t\t\tsourceClientIds,\n\t\t\t\tsourceRootClientId,\n\t\t\t\ttargetRootClientId,\n\t\t\t\tinsertIndex\n\t\t\t);\n\t\t},\n\t\t[\n\t\t\tgetClientIdsOfDescendants,\n\t\t\tgetBlockIndex,\n\t\t\ttargetBlockIndex,\n\t\t\tmoveBlocksToPosition,\n\t\t\ttargetRootClientId,\n\t\t]\n\t);\n\n\tconst { position } = useDropZone( {\n\t\telement,\n\t\tonFilesDrop,\n\t\tonHTMLDrop,\n\t\tonDrop,\n\t\tisDisabled: isLockedAll,\n\t\twithPosition: true,\n\t} );\n\n\tuseEffect( () => {\n\t\tif ( position ) {\n\t\t\tconst blockElements = Array.from( element.current.children );\n\n\t\t\tconst targetIndex = getNearestBlockIndex(\n\t\t\t\tblockElements,\n\t\t\t\tposition,\n\t\t\t\torientation\n\t\t\t);\n\n\t\t\tsetTargetBlockIndex( targetIndex === undefined ? 0 : targetIndex );\n\t\t}\n\t}, [ position ] );\n\n\tif ( position ) {\n\t\treturn targetBlockIndex;\n\t}\n}\n"]}